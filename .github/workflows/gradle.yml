name: Java CI with Gradle

# 동작 조건 설정 : main 브랜치에 push 혹은 pull request가 발생할 경우 동작한다.
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    # gradlew 파일에 실행 권한을 부여하는 작업 추가
    - name: Grant execute permission to gradlew
      run: chmod +x gradlew
      working-directory: ${{ github.workspace }}

    - name: make application.properties
      run: |
        mkdir -p src/main/resources
        cd ./src/main/resources
        touch ./application.properties
        echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./application.properties
      shell: bash


    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean bootJar

    # 3. Docker 이미지 빌드
    - name: docker image build
      run: docker build -t leeinhong9512/panda-chatting:${{ github.sha }} .



    # 4. DockerHub 로그인
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PW }}


    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/panda-chatting:${{ github.sha }}
      
            
    # 6. 다른 argoCD 전용 리포지토리에 매니페스트 파일 업데이트
    - name: Update Manifest in argoCD Repository
      run: |
        git clone https://leeinhong9512:${{ secrets.LOGIN_GITHUB_TOKEN }}@github.com/KCS-final/Chatting-argoCD.git
        cd Auction-argoCD
        sed -i 's|image: leeinhong9512/panda-auction:.*|image: leeinhong9512/panda-chatting:${{ github.sha }}|' cd.yaml
        git config --global user.name InhongLee95
        git config --global user.email leeinhong9512@gmail.com
        git add cd.yaml
        git commit -m "Update image tag to latest"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.LOGIN_GITHUB_TOKEN }}
